# Developing with Containers

This tutorial will guide you through the process of setting up and running MongoDB and Mongo Express using Docker containers.

## Prerequisites

- Docker installed on your machine
- Basic knowledge of Docker commands

## Step 1: Run MongoDB Container

First, we need to run a MongoDB container. Use the following command:

```sh
docker run -d \
    -p 27017:27017 \
    -e MONGO_INITDB_ROOT_USERNAME=admin \
    -e MONGO_INITDB_ROOT_PASSWORD=password \
    --name mongodb \
    --net mongo-network \
    mongo
```

This command does the following:
- `-d`: Runs the container in detached mode.
- `-p 27017:27017`: Maps port 27017 of the host to port 27017 of the container.
- `-e MONGO_INITDB_ROOT_USERNAME=admin`: Sets the MongoDB root username.
- `-e MONGO_INITDB_ROOT_PASSWORD=password`: Sets the MongoDB root password.
- `--name mongodb`: Names the container "mongodb".
- `--net mongo-network`: Connects the container to the "mongo-network" network.
- `mongo`: Specifies the MongoDB image.

## Step 2: Check MongoDB Logs

To check the logs of the MongoDB container, use the following command:

```sh
docker logs <container_id>
```

Replace `<container_id>` with the actual container ID of the MongoDB container.

## Step 3: Run Mongo Express Container

Next, we need to run a Mongo Express container. Use the following command:

```sh
docker run -d \
    -p 8081:8081 \
    -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin \
    -e ME_CONFIG_MONGODB_ADMINPASSWORD=password \
    --net mongo-network \
    --name mongo-express \
    -e ME_CONFIG_MONGODB_SERVER=mongodb \
    mongo-express
```

This command does the following:
- `-d`: Runs the container in detached mode.
- `-p 8081:8081`: Maps port 8081 of the host to port 8081 of the container.
- `-e ME_CONFIG_MONGODB_ADMINUSERNAME=admin`: Sets the MongoDB admin username for Mongo Express.
- `-e ME_CONFIG_MONGODB_ADMINPASSWORD=password`: Sets the MongoDB admin password for Mongo Express.
- `--net mongo-network`: Connects the container to the "mongo-network" network.
- `--name mongo-express`: Names the container "mongo-express".
- `-e ME_CONFIG_MONGODB_SERVER=mongodb`: Specifies the MongoDB server (container name).
- `mongo-express`: Specifies the Mongo Express image.

## Step 4: Check Mongo Express Logs

To check the logs of the Mongo Express container, use the following command:

```sh
docker logs <container_id>
```

Replace `<container_id>` with the actual container ID of the Mongo Express container.

## Step 5: Verify Running Containers

To verify that both containers are running, use the following command:

```sh
docker ps
```

This command lists all running containers.

## Step 6: Stop Containers

To stop the running containers, use the following commands:

```sh
docker stop <container_id>
```

Replace `<container_id>` with the actual container ID of the containers you want to stop.

## Conclusion

You have successfully set up and run MongoDB and Mongo Express using Docker containers. You can now use Mongo Express to interact with your MongoDB instance through a web interface.

For more information, refer to the official Docker Hub pages for [MongoDB](https://hub.docker.com/_/mongo/) and [Mongo Express](https://hub.docker.com/_/mongo-express).